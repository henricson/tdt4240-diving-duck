buildscript {
    ext.kotlinVersion = '1.8.0'

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
        classpath 'com.mobidevelop.robovm:robovm-gradle-plugin:2.3.19'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'org.openapitools:openapi-generator-gradle-plugin:5.3.0'
    }
}
apply plugin: 'org.openapi.generator'


task downloadSwaggerSpec {
    doLast {
        def url = "http://divingduckserver-v2.azurewebsites.net/swagger/v1/swagger.json"
        def file = "$buildDir/swagger-spec.json"

        new File(file).withOutputStream { out ->
            out << new URL(url).openStream()
        }
    }
}

task generateKotlinClient(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    group = "build"
    description = "Generate Kotlin client library from Swagger/OpenAPI specification"

    generatorName = "kotlin"
    inputSpec = file("$buildDir/swagger-spec.json").absolutePath
    outputDir = "$buildDir/generated"
    configOptions = [
            "packageName"          : "com.divingduck.client",
            "apiPackage"           : "com.divingduck.client.api",
            "modelPackage"         : "com.divingduck.client.model",
            "invokerPackage"       : "com.divingduck.client.invoker",
            "groupId"              : "com.divingduck.client",
            "artifactId"           : "divingduck-kotlin-client",
            "artifactVersion"      : "1.0.0",
            "library"              : "ktor",
    ]
}

task copyGeneratedFilesWithoutPackageStructure(type: Copy) {
    group = "build"
    description = "Copy generated Kotlin client files without package structure to the subproject"

    dependsOn generateKotlinClient

    from("$buildDir/generated/src/main/kotlin/com/divingduck/client") {
        include '**/*.kt'
    }
    into project(":core").file("src/com/divingduck/client")
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "DivingDuck"
        gdxVersion = '1.11.0'
        roboVMVersion = '2.3.19'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }
}

project(":desktop") {
    apply plugin: "kotlin"


    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}

project(":android") {
    apply plugin: "android"
    apply plugin: "kotlin-android"

    configurations { natives }

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.ashley:ashley:$ashleyVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}

project(":ios") {
    apply plugin: "kotlin"
    apply plugin: "robovm"


    dependencies {
        implementation project(":core")
        api "com.mobidevelop.robovm:robovm-rt:$roboVMVersion"
        api "com.mobidevelop.robovm:robovm-cocoatouch:$roboVMVersion"
        api "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-ios"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}

project(":core") {
    apply plugin: "kotlin"


    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.ashley:ashley:$ashleyVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
        implementation "com.squareup.moshi:moshi-kotlin:1.11.0"
        implementation "com.squareup.moshi:moshi-adapters:1.11.0"
        implementation 'com.squareup.okhttp3:okhttp:4.1.1'
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"

    }
}
